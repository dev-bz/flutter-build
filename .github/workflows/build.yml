# This is a basic workflow to help you get started with Actions

name: Build flutter engine

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      - name: load
        if: false
        run: |
          git clone --depth=1 https://chromium.googlesource.com/chromium/tools/depot_tools.git
          mkdir -p depot_tools/fakebin
          ln -sfr /usr/bin/python depot_tools/fakebin/python
          export PATH="$(pwd)/depot_tools/fakebin:$(pwd)/depot_tools:${PATH}"
          fetch --help
          # echo "target_os = ['android']" >> .gclient
          # gclient sync -D --force --reset

      # Runs a single command using the runners shell
      - name: Fetch flitter
        if: false
        run: |
          export PATH="$(pwd)/depot_tools/fakebin:$(pwd)/depot_tools:${PATH}"
          fetch flutter

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        env: 
          ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
          EMAIL: ${{ secrets.EMAIL }}
          USER: ${{ secrets.USER }}
        run: |
          echo 'test new file'>test.txt
          git config --local user.email "${EMAIL}"
          git config --local user.name "${USER}"
          git add .
          git commit -m "Add new file"
          git push
